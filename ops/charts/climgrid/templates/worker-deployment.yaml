---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-{{ .Values.worker.component }}-{{ .Values.commit }}"
  labels:
    component: {{ .Values.worker.component }}
    {{- template "labels.common" . }}
  annotations:
    {{- template "annotations.common" . }}
spec:
  replicas: {{ .Values.worker.replicas }}
  template:
    metadata:
      labels:
        component: {{ .Values.worker.component }}
        {{- include "labels.common" . | indent 4 }}
      annotations:
        {{- include "annotations.common" . | indent 4 }}
    spec:
      # mdzhang: Watch https://github.com/celery/celery/issues/4213
      #          for updates on an official Helm Celery chart
      containers:
        - name: {{ .Chart.Name }}-{{ .Values.worker.component }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          command:
            - "/usr/local/bin/celery"
          args:
            - "worker"
            - "-A"
            - "climgrid"
            - "--loglevel=info"
          ports:
            - containerPort: 8793
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - "/usr/local/bin/celery"
              args:
                - "status"
                - "-A"
                - "climgrid"
                - "|"
                - "grep"
                - "-o"
                - "OK"
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - "/usr/local/bin/celery"
              args:
                - "status"
                - "-A"
                - "climgrid"
                - "|"
                - "grep"
                - "-o"
                - "OK"
            initialDelaySeconds: 30
            periodSeconds: 10
          env:
            - name: TARBALL_URI
              value: ftp://ftp.ncdc.noaa.gov/pub/data/climgrid/
            - name: REDIS_URI
              value: redis://$({{ .Values.redis.fullnameOverride | upper | replace "-" "_" }}_SERVICE_HOST):6379/0
            - name: DATA_URI
              value: gs://climgrid-data-2018-04/climgrid/pnt/
            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: POSTGRESQL_URI
              # Because the proxy runs in a second container in the same pod,
              # it appears to application as localhost, so use 127.0.0.1:5432 to connect to it.
              value: postgresql+psycopg2://$(PG_USER):$(PG_PASSWORD)@127.0.0.1:5432/precipitation
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/opt/climgrid/credentials.json
          volumeMounts:
            - name: cloudstorage-credentials
              mountPath: /etc/opt/climgrid
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances={{ .Values.db.cloudsql.instanceConnectionName }}=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
          ports:
            - containerPort: 5432
              protocol: TCP
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        - name: cloudstorage-credentials
          configMap:
            name: cloudstorage-credentials
            items:
              - key: credentials.json
                path: credentials.json
